<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>内网穿透 on マクロス</title><link>https://www.takuzen.me/tags/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</link><description>Recent content in 内网穿透 on マクロス</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>呉</copyright><lastBuildDate>Sat, 08 Oct 2016 14:45:08 +0000</lastBuildDate><atom:link href="https://www.takuzen.me/tags/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/index.xml" rel="self" type="application/rss+xml"/><item><title>ssh反向代理实现内网穿透（比较失败( ˙灬˙ )）</title><link>https://www.takuzen.me/posts/2016-10-08-ssh-reverse-proxy/</link><pubDate>Sat, 08 Oct 2016 14:45:08 +0000</pubDate><guid>https://www.takuzen.me/posts/2016-10-08-ssh-reverse-proxy/</guid><description>有关背景请参见http://www.upwzr.com/2016/10/08/run-ngrok/，本文是在使用ngrok之前的依次失败的尝试。。。当然，ngrok实际上也是是ssh来实现的。
对于内网主机想要外网访问，最简单的办法当然是在路由器上做手脚，但是在不能操作路由设备的时候（比如说学校的内网网段），想要实现外网访问可通过ssh隧道实现。只需要一条很简单的命令：
ssh -N -f -R 80:127.0.0.1:8001 root@123.45.67.89 -N 不执行远程命令 -f 后台执行 -R remote_port:localhost:local_port 远程端口转发 上面的命令就表示连接到123.45.67.89，将本地的8001端口转发到123.45.67.89的80端口。公网主机的80端口转发必须使用root权限，用root角色去连接公网主机。 -g (GatewayPorts) option 先贴出一段鸟文：
When you forward a TCP port (either locally or remotely), by default SSH only listens for connections to the forwarded port on the loopback address (localhost, 127.0.0.1). This means only other programs running on the same host as the listening side of the forwarding can connect to the forwarded port. This is a security feature, since there is no authentication applied to such connections.</description></item><item><title>搭建自己的ngrok服务实现内网穿透</title><link>https://www.takuzen.me/posts/2016-10-08-run-ngrok/</link><pubDate>Sat, 08 Oct 2016 12:41:33 +0000</pubDate><guid>https://www.takuzen.me/posts/2016-10-08-run-ngrok/</guid><description>学校有台服务器上跑我们的自己用的gitlab，然而分配的ip是内网网段，在校外或者使用手机流量就没办法访问，跟信管中心申请公网ip又得看他们脸色( ∙̆ .̯ ∙̆ )。尝试了直接用ssh做反向代理，感觉效果不是很满意，不太稳定时常掉线，而且由于腾讯云的坑爹限制，没办法转发到公网80端口上。后来发现了一款神器ngrok，官网提供了收费的转发服务，国内也有不少热心童鞋提供了免费的ngrok服务。不过ngrok 1.x 的版本是开源的，干脆自力更生，搭建自己的ngrok服务。
准备 首先最重要的当然是得有一台公网主机，我的是腾讯云的vps；然后内网主机需要保证可以访问外网（废话），然后要有个域名，绑定到公网ip上。最好做下泛解析，也就是添加一条形如*.yourdomain.xxx的A记录。 公网主机有些环境要配置好，下面这几个包要安装上，为了后面能够顺利的编译ngrok源码（以ubuntu为例）：
sudo add-apt-repository ppa:ubuntu-lxc/lxd-stable sudo apt-get update sudo apt-get install golang sudo apt-get install build-essential mercurial git ngrok使用go写的，所以上面安装了golang环境。有时因为友好的GFW，可能会获取不到源，可参见这个Go 安装
安装ngrok 获取源码 git clone https://github.com/inconshreveable/ngrok.git ngrok cd ngrok export GOPATH=~/ngrok # 也就是刚刚获取的源码位置 最后一句是go环境的配置，跳过不执行应该也可以，没试过。
生成自签名证书 注意第二步和第五步中要替换你自己的域名。
openssl genrsa -out rootCA.key 2048 openssl req -x509 -new -nodes -key rootCA.key -subj &amp;#34;/CN=upwzr.com&amp;#34; -days 5000 -out rootCA.pem openssl genrsa -out device.key 2048 openssl req -new -key device.</description></item></channel></rss>